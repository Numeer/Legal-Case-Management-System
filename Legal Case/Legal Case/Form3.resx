<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1KydGPXhZl7RYo//2Q==
</value>
  </data>
</root>